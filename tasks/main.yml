---
# tasks file for docker-install-role
- name : "Install Docker from Jinja2 script"
  template:
    src: "docker_install.sh.j2"
    dest: "/home/{{ ansible_user }}/docker_install.sh"
  when : ansible_docker0 is undefined and (ansible_distribution == "Ubuntu" or ansible_distribution == "Centos")

- name: "Execute Install Script"
  command: "sh /home/{{ ansible_user }}/docker_install.sh"
  when : ansible_docker0 is undefined and (ansible_distribution == "Ubuntu" or ansible_distribution == "Centos")

- name: Install EPEL repo
  package: 
    name: "{{ item }}"
    state: present
  when: ansible_distribution == "CentOS"
  loop:
    - epel-release 

- name: Download pip script
  get_url:
    url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
    dest: /tmp/get-pip.py
  when: ansible_distribution == "CentOS"

- name: Install python-pip
  command: python2.7 /tmp/get-pip.py
  when: ansible_distribution == "CentOS"

- name: "Install docker python"
  pip: 
    name: docker-py
    state: present
  when: ansible_distribution == "CentOS"

# Docker-py Installation for Ubuntu

- name : "Install python pip3 for Ubuntu"
  package:
    name: python3-pip
    state: present
  when: ansible_distribution == "Ubuntu"

- name: "Install docker-py via pip Ubuntu"
  pip:
    name: docker-py
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Include variables
  include_vars:
    file: "main.yml"
  tags:
    - docker

- name: Create docker group
  group:
    name: "{{ docker_group }}"
    gid: "{{ docker_gid }}"
    state: present
  tags:
    - docker

- name: Create docker user
  user:
    name: "{{ docker_user }}"
    uid: "{{ docker_uid }}"
    group: "{{ docker_group }}"
    shell: /usr/sbin/nologin
  tags:
    - docker

- name: Create download directory (used to store archives)
  file:
    path: "{{ docker_download_dir }}"
    state: directory
    mode: 0750
  tags:
    - docker

- name: Create docker.socket systemd file
  template:
    src: etc/systemd/system/docker.socket.j2
    dest: /etc/systemd/system/docker.socket
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart docker
  tags:
    - docker

- meta: flush_handlers
- name: Enable and start Docker
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker
